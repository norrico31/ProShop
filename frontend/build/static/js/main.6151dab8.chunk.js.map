{"version":3,"sources":["store/constants/userConstants.js","store/constants/orderConstants.js","store/actions/userActions.js","components/SearchBar.jsx","components/Header.jsx","components/Footer.jsx","components/Rating.jsx","components/Product.jsx","store/constants/productConstants.js","store/actions/productActions.js","components/Loader.jsx","components/Message.jsx","components/ProductCarousel.jsx","components/Paginate.jsx","components/Meta.jsx","screens/HomeScreen.jsx","screens/ProductScreen.jsx","store/constants/cartConstants.js","store/actions/cartActions.js","screens/CartScreen.jsx","components/FormContainer.jsx","screens/LoginScreen.jsx","screens/RegisterScreen.jsx","screens/ProfileScreen.jsx","store/actions/orderActions.js","components/CheckoutSteps.jsx","screens/ShippingScreen.jsx","screens/PaymentScreen.jsx","screens/PlaceOrderScreen.jsx","screens/OrderScreen.jsx","screens/UserListScreen.jsx","screens/UserEditScreen.jsx","screens/ProductListScreen.jsx","screens/ProductEditScreen.jsx","screens/OrderListScreen.jsx","App.jsx","store/reducers/index.js","store/reducers/productReducers.js","store/reducers/cartReducers.js","store/reducers/userReducers.js","store/reducers/orderReducers.js","store/store.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","ADMIN_USER_LIST_REQUEST","ADMIN_USER_LIST_SUCCESS","ADMIN_USER_LIST_FAIL","ADMIN_USER_LIST_RESET","ADMIN_USER_DELETE_REQUEST","ADMIN_USER_DELETE_SUCCESS","ADMIN_USER_DELETE_FAIL","ADMIN_USER_UPDATE_REQUEST","ADMIN_USER_UPDATE_SUCCESS","ADMIN_USER_UPDATE_FAIL","ADMIN_USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ADMIN_ORDER_LIST_REQUEST","ADMIN_ORDER_LIST_SUCCESS","ADMIN_ORDER_LIST_FAIL","ADMIN_ORDER_DELIVER_REQUEST","ADMIN_ORDER_DELIVER_SUCCESS","ADMIN_ORDER_DELIVER_FAIL","ADMIN_ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","type","token","userLogin","userInfo","config","headers","Authorization","axios","get","res","payload","data","response","message","SearchBar","props","useState","keyword","keywordSet","Form","onSubmit","e","preventDefault","trim","history","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","localStorage","clear","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","product","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","ADMIN_PRODUCT_DELETE_REQUEST","ADMIN_PRODUCT_DELETE_SUCCESS","ADMIN_PRODUCT_DELETE_FAIL","ADMIN_PRODUCT_CREATE_REQUEST","ADMIN_PRODUCT_CREATE_SUCCESS","ADMIN_PRODUCT_CREATE_FAIL","ADMIN_PRODUCT_CREATE_RESET","ADMIN_PRODUCT_UPDATE_REQUEST","ADMIN_PRODUCT_UPDATE_SUCCESS","ADMIN_PRODUCT_UPDATE_FAIL","ADMIN_PRODUCT_UPDATE_RESET","listProducts","pageNumber","listProductDetails","productId","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","ProductCarousel","state","productTopRated","products","loading","error","useEffect","Carousel","pause","map","Image","alt","fluid","Caption","Paginate","pages","page","Pagination","Array","keys","x","active","Meta","description","keywords","Helmet","content","HomeScreen","match","params","productList","sm","md","lg","xl","ProductScreen","qty","qtySet","ratingSet","comment","commentSet","productDetails","productReviewCreate","successProductReview","success","loadingProductReview","errorProductReview","alert","ListGroup","countInStock","val","disabled","reviews","length","review","createdAt","substring","post","createProductReview","Group","controlId","Label","Number","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","search","split","removeFromCartHandler","removeFromCart","cartItem","rounded","cartItemId","targetVal","reduce","total","currItem","toFixed","lenght","FormContainer","xs","LoginScreen","email","emailSet","password","passwordSet","redirect","login","RegisterScreen","nameSet","confirmPassword","confirmPasswordSet","messageSet","userRegister","register","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","orders","loadingOrders","errorOrders","patch","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","addressSet","city","citySet","postalCode","postalCodeSet","country","countrySet","required","PaymentScreen","paymentMethod","paymentMethodSet","method","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","item","shippingPrice","taxPrice","orderCreate","idx","createOrder","orderItems","OrderScreen","sdkReady","sdkReadySet","orderId","orderDetails","orderPay","successPay","loadingPay","adminMarkOrderAsDelivered","successDelivered","loadingDelivered","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","getOrderDetails","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","adminOrderDeliver","UserListScreen","adminUserList","users","successDelete","adminDeleteUser","deleteUserHandler","userId","confirm","delete","UserEditScreen","isAdminSet","adminUpdateUser","successUpdate","loadingUpdate","errorUpdate","ProductListScreen","adminDeleteProduct","loadingDelete","errorDelete","adminCreateProduct","successCreate","loadingCreate","errorCreate","createdProduct","category","brand","ProductEditScreen","priceSet","imageSet","brandSet","categorySet","countInStockSet","descriptionSet","uploading","uploadingSet","adminUpdateProduct","uploadFileHandler","file","files","formData","FormData","append","updateProductByAdmin","File","custom","OrderListScreen","adminOrderList","App","path","component","exact","reducer","combineReducers","action","newItem","existItem","find","filter","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","initialState","store","createStore","composeWithDevTools","applyMiddleware","reduxThunk","getElementById"],"mappings":"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","file":"static/js/main.6151dab8.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const ADMIN_USER_LIST_REQUEST = 'ADMIN_USER_LIST_REQUEST'\r\nexport const ADMIN_USER_LIST_SUCCESS = 'ADMIN_USER_LIST_SUCCESS'\r\nexport const ADMIN_USER_LIST_FAIL = 'ADMIN_USER_LIST_FAIL'\r\nexport const ADMIN_USER_LIST_RESET = 'ADMIN_USER_LIST_RESET'\r\n\r\nexport const ADMIN_USER_DELETE_REQUEST = 'ADMIN_USER_DELETE_REQUEST'\r\nexport const ADMIN_USER_DELETE_SUCCESS = 'ADMIN_USER_DELETE_SUCCESS'\r\nexport const ADMIN_USER_DELETE_FAIL = 'ADMIN_USER_DELETE_FAIL'\r\n\r\nexport const ADMIN_USER_UPDATE_REQUEST = 'ADMIN_USER_UPDATE_REQUEST'\r\nexport const ADMIN_USER_UPDATE_SUCCESS = 'ADMIN_USER_UPDATE_SUCCESS'\r\nexport const ADMIN_USER_UPDATE_FAIL = 'ADMIN_USER_UPDATE_FAIL'\r\nexport const ADMIN_USER_UPDATE_RESET = 'ADMIN_USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ADMIN_ORDER_LIST_REQUEST = 'ADMIN_ORDER_LIST_REQUEST'\r\nexport const ADMIN_ORDER_LIST_SUCCESS = 'ADMIN_ORDER_LIST_SUCCESS'\r\nexport const ADMIN_ORDER_LIST_FAIL = 'ADMIN_ORDER_LIST_FAIL'\r\n\r\nexport const ADMIN_ORDER_DELIVER_REQUEST = 'ADMIN_ORDER_DELIVER_REQUEST'\r\nexport const ADMIN_ORDER_DELIVER_SUCCESS = 'ADMIN_ORDER_DELIVER_SUCCESS'\r\nexport const ADMIN_ORDER_DELIVER_FAIL = 'ADMIN_ORDER_DELIVER_FAIL'\r\nexport const ADMIN_ORDER_DELIVER_RESET = 'ADMIN_ORDER_DELIVER_RESET'","import {USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, ADMIN_USER_LIST_REQUEST, ADMIN_USER_LIST_SUCCESS, ADMIN_USER_LIST_FAIL, ADMIN_USER_LIST_RESET, ADMIN_USER_DELETE_REQUEST, ADMIN_USER_DELETE_SUCCESS, ADMIN_USER_DELETE_FAIL, ADMIN_USER_UPDATE_REQUEST, ADMIN_USER_UPDATE_SUCCESS, ADMIN_USER_UPDATE_FAIL} from '../constants/userConstants'\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    try {\r\n        dispatch({type: USER_LOGIN_REQUEST})\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(`/api/users/login`, {email, password}, config)\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (name, email, password) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const {data} = await axios.post(`/api/users`, {name, email, password}, {headers: {'Content-Type': 'application/json'}})\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = id => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo: { token }}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n        const res = await axios.get(`/api/users/${id}`, config)\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: res?.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = user => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo: { token }}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n        const res = await axios.patch(`/api/users/profile`, user, config)\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: res?.data\r\n        })\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: res?.data})\r\n        localStorage.setItem('userInfo', JSON.stringify(res?.data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const adminListUsers = () => async (dispatch, getState) => {\r\n    const { userLogin: { userInfo: { token }}} = getState()\r\n    try {\r\n        dispatch({\r\n            type: ADMIN_USER_LIST_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n        const res = await axios.get(`/api/users`, config)\r\n        dispatch({\r\n            type: ADMIN_USER_LIST_SUCCESS,\r\n            payload: res?.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_USER_LIST_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const adminDeleteUser = userId => async (dispatch, getState) => {\r\n    const { userLogin: { userInfo: { token }}} = getState()\r\n    try {\r\n        dispatch({\r\n            type: ADMIN_USER_DELETE_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n        await axios.delete(`/api/users/${userId}`, config)\r\n        dispatch({type: ADMIN_USER_DELETE_SUCCESS})\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_USER_DELETE_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const adminUpdateUser = user => async (dispatch, getState) => {\r\n    const { userLogin: { userInfo: { token }}} = getState()\r\n    try {\r\n        dispatch({\r\n            type: ADMIN_USER_UPDATE_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n        const {data} = await axios.patch(`/api/users/${user._id}`, user, config)\r\n        dispatch({type: ADMIN_USER_UPDATE_SUCCESS})\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_USER_UPDATE_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: ADMIN_USER_LIST_RESET})\r\n    localStorage.clear()\r\n}\r\n","import {useState} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nexport const SearchBar = props => {\r\n    const [keyword, keywordSet] = useState('')\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n\r\n        if (keyword.trim()) return props.history.push(`/search/${keyword}`)\r\n        return props.history.push('/')\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text'  name='q' onChange={e => keywordSet(e.target.value)} placeholder='Search Products...' className='mr-sm-2 ml-sm-5' />\r\n            <Button type='submit' variant='outline-success' className='p-2'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n","import {Route} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Navbar, Nav, Container, NavDropdown} from 'react-bootstrap'\r\nimport {logout} from '../store/actions/userActions'\r\nimport {SearchBar} from './SearchBar'\r\n\r\nexport const Header = ({history}) => {\r\n    const {userInfo} = useSelector(({userLogin}) => userLogin)\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={props => <SearchBar history={props.history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link><i className='fas fa-shopping-cart'/> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                            </NavDropdown>) : (\r\n                            <LinkContainer to=\"/login\">\r\n                                <Nav.Link><i className='fas fa-user'/> Sign In</Nav.Link>\r\n                            </LinkContainer>)}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n","import {Container, Row, Col} from 'react-bootstrap'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\nRating.propTypes = {\r\n    value: PropTypes.number,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}","import {Link} from 'react-router-dom'\r\nimport { Card } from \"react-bootstrap\"\r\nimport { Rating } from \"./Rating\"\r\n\r\n\r\nexport const Product = props => {\r\n    return (\r\n        <>\r\n            <Card className='my-3 p-3 rounded'>\r\n                <Link to={`/product/${props.product._id}`}>\r\n                    <Card.Img src={props.product.image} variant='top' />\r\n                </Link>\r\n                <Card.Body>\r\n                    <Link to={`/product/${props.product._id}`}>\r\n                        <Card.Title as='div'><strong>{props.product.name}</strong></Card.Title>\r\n                    </Link>\r\n                    <Card.Text as='div'>\r\n                        <Rating value={props.product.rating} text={`${props.product.numReviews} reviews`}/>\r\n                    </Card.Text>\r\n                    <Card.Text as='h3'>${props.product.price}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            {props.text && <span>{props.text}</span>}\r\n        </>\r\n    )\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const ADMIN_PRODUCT_DELETE_REQUEST = 'ADMIN_PRODUCT_DELETE_REQUEST'\r\nexport const ADMIN_PRODUCT_DELETE_SUCCESS = 'ADMIN_PRODUCT_DELETE_SUCCESS'\r\nexport const ADMIN_PRODUCT_DELETE_FAIL = 'ADMIN_PRODUCT_DELETE_FAIL'\r\n\r\nexport const ADMIN_PRODUCT_CREATE_REQUEST = 'ADMIN_PRODUCT_CREATE_REQUEST'\r\nexport const ADMIN_PRODUCT_CREATE_SUCCESS = 'ADMIN_PRODUCT_CREATE_SUCCESS'\r\nexport const ADMIN_PRODUCT_CREATE_FAIL = 'ADMIN_PRODUCT_CREATE_FAIL'\r\nexport const ADMIN_PRODUCT_CREATE_RESET = 'ADMIN_PRODUCT_CREATE_RESET'\r\n\r\nexport const ADMIN_PRODUCT_UPDATE_REQUEST = 'ADMIN_PRODUCT_UPDATE_REQUEST'\r\nexport const ADMIN_PRODUCT_UPDATE_SUCCESS = 'ADMIN_PRODUCT_UPDATE_SUCCESS'\r\nexport const ADMIN_PRODUCT_UPDATE_FAIL = 'ADMIN_PRODUCT_UPDATE_FAIL'\r\nexport const ADMIN_PRODUCT_UPDATE_RESET = 'ADMIN_PRODUCT_UPDATE_RESET'","import axios from 'axios'\r\nimport { ADMIN_PRODUCT_CREATE_FAIL, ADMIN_PRODUCT_CREATE_REQUEST, ADMIN_PRODUCT_CREATE_SUCCESS, ADMIN_PRODUCT_DELETE_FAIL, ADMIN_PRODUCT_DELETE_REQUEST, ADMIN_PRODUCT_DELETE_SUCCESS, ADMIN_PRODUCT_UPDATE_FAIL, ADMIN_PRODUCT_UPDATE_REQUEST, ADMIN_PRODUCT_UPDATE_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_TOP_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS } from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async dispatch => {\r\n    dispatch({type: PRODUCT_LIST_REQUEST})\r\n    try {\r\n        const res = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: res.data})\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message})\r\n    }\r\n}\r\n\r\nexport const listProductDetails = productId => async dispatch => {\r\n    dispatch({\r\n        type: PRODUCT_DETAILS_REQUEST\r\n    })\r\n    try {\r\n        const res = await axios.get('/api/products/' + productId)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS, \r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async dispatch => {\r\n    dispatch({\r\n        type: PRODUCT_TOP_REQUEST\r\n    })\r\n    try {\r\n        const res = await axios.get('/api/products/top')\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS, \r\n            payload: res?.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductByAdmin = productId => async (dispatch, getState) => {\r\n    const { userLogin: { userInfo: { token }}} = getState()\r\n    try {\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_DELETE_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n        await axios.delete(`/api/products/${productId}`, config)\r\n        dispatch({type: ADMIN_PRODUCT_DELETE_SUCCESS})\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_DELETE_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductByAdmin = () => async (dispatch, getState) => {\r\n    try {\r\n        const { userLogin: { userInfo: { token }}} = getState()\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_CREATE_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n        const res = await axios.post(`/api/products/`, {}, config)\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_CREATE_SUCCESS,\r\n            payload: res?.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_CREATE_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        const { userLogin: { userInfo: { token }}} = getState()\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProductByAdmin = product => async (dispatch, getState) => {\r\n    try {\r\n        const { userLogin: { userInfo: { token }}} = getState()\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_UPDATE_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + token\r\n            }}\r\n        const {data} = await axios.patch(`/api/products/${product._id}`, product, config)\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_UPDATE_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = () => (\r\n    <Spinner animation='border' role='status' style={{width: '100px', height: '100px', margin: 'auto', display: 'block'}}>\r\n        <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n)\r\nexport default Loader","import {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => (\r\n    <Alert variant={variant}>\r\n        {children}\r\n    </Alert>\r\n)\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\nexport default Message","import {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {listTopProducts} from '../store/actions/productActions'\r\nimport {Carousel, Image} from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nexport const ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n    const {products, loading, error} = useSelector(function(state) {return state.productTopRated})\r\n\r\n    useEffect(function() {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n","import {Pagination} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nexport const Paginate = ({pages, page, isAdmin = false, keyword = ''}) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer to={!isAdmin ? keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x + 1}` : `/admin/productlist/${x+1}`} key={x + 1}>\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n","import {Helmet} from 'react-helmet'\r\n\r\nconst Meta = ({title, description, keywords}) => (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n        <meta name='description' content={description} />\r\n        <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n)\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To ProShop',\r\n    keywords: 'electronics, buy electronics, cheap electronics',\r\n    description: 'We sell the best products for cheap'\r\n}\r\n\r\nexport default Meta\r\n","import {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Product} from '../components/Product'\r\nimport {listProducts} from '../store/actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {ProductCarousel} from '../components/ProductCarousel'\r\nimport {Paginate} from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\n\r\nexport const HomeScreen = props => {\r\n    const keyword = props.match.params.keyword\r\n    const pageNumber = props.match.params.pageNumber || 1\r\n\r\n    const {products, pages, page, loading, error} = useSelector(function(state) {return state.productList})\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    } ,[dispatch, keyword, pageNumber])\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />: error ? <h3><Message variant='danger'>{error}</Message></h3> : (\r\n                <>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col sm={12} md={6} lg={4} xl={3} key={product._id} >\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''}/>\r\n                </>\r\n            )} \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap'\r\nimport {Rating} from '../components/Rating'\r\nimport { listProductDetails, createProductReview } from '../store/actions/productActions'\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../store/constants/productConstants'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\n\r\nexport const ProductScreen = ({match, history}) => {\r\n    const productId = match.params.id\r\n    const [qty, qtySet] = useState(1)\r\n    const [rating, ratingSet] = useState(0)\r\n    const [comment, commentSet] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const {product, loading, error} = useSelector(state => state.productDetails)\r\n    const {userInfo} = useSelector(({userLogin}) => userLogin) \r\n    const {success: successProductReview, loading: loadingProductReview, error: errorProductReview} = useSelector(function({productReviewCreate}){return productReviewCreate})\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review submitted!')\r\n            ratingSet(0)\r\n            commentSet('')\r\n            dispatch({\r\n                type: PRODUCT_CREATE_REVIEW_RESET\r\n            })\r\n        }\r\n        dispatch(listProductDetails(productId))\r\n    } ,[dispatch, productId, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${productId}?qty=${qty}`)\r\n    }\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(productId, {rating, comment}))\r\n\r\n    }\r\n    return (\r\n        <>  \r\n            <Link to='/' className=\"btn btn-light my-3\">Go Back</Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: ${product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Price:\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Status:\r\n                                            </Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control as='select' value={qty} onChange={e => qtySet(e.target.value)}>\r\n                                                        {[...Array(product.countInStock).keys()].map(val => (\r\n                                                            <option key={val + 1} value={val + 1}>\r\n                                                                {val + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                    <ListGroup.Item>\r\n                                        <Button className='btn-block' type='button' disabled={product.countInStock === 0} onClick={addToCartHandler}>Add To Cart</Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            {loadingProductReview && <Loader />}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>\r\n                                            {review.name}\r\n                                            <Rating value={review.rating} />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </strong>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control as='select' value={rating} onChange={e => ratingSet(Number(e.target.value))}>\r\n                                                    <option value=''>Select...</option>\r\n                                                    <option value='1'>1 - Poor</option>\r\n                                                    <option value='2'>2 - Fair</option>\r\n                                                    <option value='3'>3 - Good</option>\r\n                                                    <option value='4'>4 - Very Good</option>\r\n                                                    <option value='5'>5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control as='textarea' row='3' value={comment} onChange={e => commentSet(e.target.value)}>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button type='submit' variant='primary'>Submit</Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>Please <Link to='/login'>Sign in</Link> to write a review</Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${productId}`)\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = productId => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: productId\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = data => async dispatch => {\r\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload: data})\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = method => async dispatch => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: method\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(method))\r\n}","import {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport {addToCart, removeFromCart} from '../store/actions/cartActions'\r\nimport Message from '../components/Message'\r\n\r\nexport const CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const {cartItems} = useSelector(({cart}) => cart)\r\n\r\n    useEffect(() => {\r\n        if (productId) dispatch(addToCart(productId, qty))\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = id => {\r\n        history.push('/cart')\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkOut = () => {\r\n        history.push(`/login?redirect=shipping`)\r\n    }\r\n    const formQtyHandler = (cartItemId, targetVal) => {\r\n        dispatch(addToCart(cartItemId, Number(targetVal)))\r\n        history.push('/cart')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(cartItem => (\r\n                            <ListGroup.Item key={cartItem.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={cartItem.image} alt={cartItem.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${cartItem.product}`}>{cartItem.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${cartItem.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={cartItem.qty} onChange={e => formQtyHandler(cartItem.product, e.target.value)}>\r\n                                            {[...Array(cartItem.countInStock).keys()].map(val => (\r\n                                                <option key={val + 1} value={val + 1}>\r\n                                                    {val + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(cartItem.product)}>\r\n                                            <i className='fas fa-trash' />\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((total, currItem) => total + currItem.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((total, currItem) => total + currItem.qty * currItem.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.lenght === 0} onClick={checkOut}>Proceed to Checkout</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import {Container, Row, Col} from 'react-bootstrap'\r\n\r\nexport const FormContainer = props => (\r\n    <Container>\r\n        <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {props.children}\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n)\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {login} from '../store/actions/userActions'\r\nimport {FormContainer} from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nexport const LoginScreen = ({location, history}) => {\r\n    const [email, emailSet] = useState('')\r\n    const [password, passwordSet] = useState('')\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const dispatch = useDispatch()\r\n    const {userInfo, loading, error} = useSelector(state => state.userLogin)\r\n\r\n    useEffect(() => {\r\n        if (userInfo) history.push(redirect)\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => emailSet(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={e => passwordSet(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link></Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {register} from '../store/actions/userActions'\r\nimport {FormContainer} from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nexport const RegisterScreen = ({location, history}) => {\r\n    const [name, nameSet] = useState('')\r\n    const [email, emailSet] = useState('')\r\n    const [password, passwordSet] = useState('')\r\n    const [confirmPassword, confirmPasswordSet] = useState('')\r\n    const [message, messageSet] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const {userInfo, loading, error} = useSelector(state => state.userRegister)\r\n    \r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    \r\n    useEffect(() => {\r\n        if (userInfo) history.push(redirect)\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            messageSet('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter name' value={name} onChange={e => nameSet(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => emailSet(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={e => passwordSet(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={e => confirmPasswordSet(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link></Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {getUserDetails, updateUserProfile} from '../store/actions/userActions'\r\nimport {listMyOrders} from '../store/actions/orderActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {USER_UPDATE_PROFILE_RESET} from '../store/constants/userConstants'\r\n\r\nexport const ProfileScreen = ({location, history}) => {\r\n    const [name, nameSet] = useState('')\r\n    const [email, emailSet] = useState('')\r\n    const [password, passwordSet] = useState('')\r\n    const [confirmPassword, confirmPasswordSet] = useState('')\r\n    const [message, messageSet] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const {user, loading, error} = useSelector(state => state.userDetails)\r\n    const {userInfo} = useSelector(({userLogin}) => userLogin)\r\n    const {success} = useSelector(state => state.userUpdateProfile)\r\n    const {orders, loading: loadingOrders, error: errorOrders} = useSelector(({orderListMy}) => orderListMy)\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) history.push('/login')\r\n        else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({\r\n                    type: USER_UPDATE_PROFILE_RESET\r\n                })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                nameSet(user.name)\r\n                emailSet(user.email)\r\n            }\r\n        }\r\n        \r\n    }, [history, userInfo, dispatch, user, orders, success])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            messageSet('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\r\n        }\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                {success && <Message variant=\"success\">Profile Updated</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name} onChange={e => nameSet(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => emailSet(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Enter Password' value={password} onChange={e => passwordSet(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={e => confirmPasswordSet(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt && order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (<i className='fas fa-times' style={{color: 'red'}} />)}</td>\r\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (<i className='fas fa-times' style={{color: 'red'}} />)}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import {ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ADMIN_ORDER_LIST_REQUEST, ADMIN_ORDER_LIST_SUCCESS, ADMIN_ORDER_LIST_FAIL, ADMIN_ORDER_DELIVER_REQUEST, ADMIN_ORDER_DELIVER_SUCCESS, ADMIN_ORDER_DELIVER_FAIL} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = order => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ORDER_CREATE_REQUEST})\r\n        const {userLogin: {userInfo: {token}}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(`/api/orders`, order, config)\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = orderId => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ORDER_DETAILS_REQUEST})\r\n        const {userLogin: {userInfo: {token}}} = getState()\r\n        const {data} = await axios.get(`/api/orders/${orderId}`, {headers: {Authorization: `Bearer ${token}`}})\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ORDER_PAY_REQUEST})\r\n        const {userLogin: {userInfo: {token}}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const {data} = await axios.patch(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const adminOrderDeliver = orderId => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ADMIN_ORDER_DELIVER_REQUEST})\r\n        const {userLogin: {userInfo: {token}}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const {data} = await axios.patch(`/api/orders/${orderId}/deliver`, {}, config)\r\n        dispatch({\r\n            type: ADMIN_ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_ORDER_DELIVER_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ORDER_LIST_MY_REQUEST})\r\n        const {userLogin: {userInfo: {token}}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(`/api/orders/myorders`, config)\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrderByAdmin = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ADMIN_ORDER_LIST_REQUEST})\r\n        const {userLogin: {userInfo: {token}}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const res = await axios.get(`/api/orders`, config)\r\n        dispatch({\r\n            type: ADMIN_ORDER_LIST_SUCCESS,\r\n            payload: res?.data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_ORDER_LIST_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import {Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nexport const CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {FormContainer} from '../components/FormContainer'\r\nimport {saveShippingAddress} from '../store/actions/cartActions'\r\nimport {CheckoutSteps} from '../components/CheckoutSteps'\r\n\r\nexport const ShippingScreen = ({history}) => {\r\n    const {shippingAddress} = useSelector(function({cart}){return cart})\r\n    const dispatch = useDispatch()\r\n    const [address, addressSet] = useState(shippingAddress.address ?? '')\r\n    const [city, citySet] = useState(shippingAddress.city ?? '')\r\n    const [postalCode, postalCodeSet] = useState(shippingAddress.postalCode ?? '')\r\n    const [country, countrySet] = useState(shippingAddress.country ?? '')\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter address' required value={address} onChange={e => addressSet(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter city' required value={city} onChange={e => citySet(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='postalcode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter postal code' required value={postalCode} onChange={e => postalCodeSet(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter country' required value={country} onChange={e => countrySet(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {FormContainer} from '../components/FormContainer'\r\nimport {savePaymentMethod} from '../store/actions/cartActions'\r\nimport {CheckoutSteps} from '../components/CheckoutSteps'\r\n\r\nexport const PaymentScreen = ({history}) => {\r\n    const {shippingAddress} = useSelector(function({cart}){return cart})\r\n    const dispatch = useDispatch()\r\n\r\n    if (!shippingAddress) history.push('/shipping')\r\n    const [paymentMethod, paymentMethodSet] = useState('Paypal')\r\n    \r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='Paypal or Credit Card' id='Paypal' name='paymentmethod' value='Paypal' checked onChange={e => paymentMethodSet(e.target.value)}></Form.Check>\r\n                        {/* <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentmethod' value='Stripe' onChange={e => paymentMethodSet(e.target.value)}></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n","import {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport {createOrder} from '../store/actions/orderActions'\r\nimport {CheckoutSteps} from '../components/CheckoutSteps'\r\n\r\nexport const PlaceOrderScreen = ({history}) => {\r\n    const cart = useSelector(({cart}) => cart)\r\n    const {cartItems, paymentMethod, shippingAddress} = cart\r\n    const dispatch = useDispatch()\r\n\r\n    // Calculate prices\r\n    const addDecimals = num => (Math.round(num * 100) / 100).toFixed(2)\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((total, item) => total + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const {order, success, error} = useSelector(state => state.orderCreate)\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: shippingAddress,\r\n            paymentMethod: paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) history.push(`/order/${order._id}`)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history, success])\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {shippingAddress.address}, {shippingAddress.city}{' '}\r\n                                {shippingAddress.postalCode},{' '}\r\n                                {shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, idx) => (\r\n                                        <ListGroup.Item key={idx}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col>${cart.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col>${cart.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col>${cart.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col>${cart.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    {error && <Message variant='danger'>{error}</Message>}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                                </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, ListGroup, Image, Card, Button} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getOrderDetails, payOrder, adminOrderDeliver} from '../store/actions/orderActions'\r\nimport axios from 'axios'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {ORDER_PAY_RESET, ADMIN_ORDER_DELIVER_RESET} from '../store/constants/orderConstants'\r\n\r\nexport const OrderScreen = ({match, history}) => {\r\n    const [sdkReady, sdkReadySet] = useState(false)\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const {userInfo} = useSelector(function(state){return state.userLogin})\r\n    const {order, error, loading} = useSelector(state => state.orderDetails)\r\n    const {success: successPay, loading: loadingPay} = useSelector(({orderPay}) => orderPay)\r\n    const {success: successDelivered, loading: loadingDelivered} = useSelector(({adminMarkOrderAsDelivered}) => adminMarkOrderAsDelivered)\r\n\r\n    if (!loading) {\r\n         // Calculate prices\r\n        const addDecimals = num => (Math.round(num * 100) / 100).toFixed(2)\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((total, item) => total + item.price * item.qty, 0))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const {data: clientId} = await axios.get(`/api/config/paypal`)\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                sdkReadySet(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!userInfo) return history.push('/login')\r\n\r\n        if (!order || successPay || order._id !== orderId || successDelivered) {\r\n            dispatch({type: ADMIN_ORDER_DELIVER_RESET})\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                sdkReadySet(true)\r\n            } \r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDelivered, userInfo, history])\r\n\r\n    \r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(adminOrderDeliver(order._id))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong> <Link to={`mailto:${order.user.email}`}>{order.user.email}</Link></p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, idx) => (\r\n                                        <ListGroup.Item key={idx}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {!order.isPaid && (\r\n                                    <ListGroup>\r\n                                        {loadingPay && <Loader />}\r\n                                        {!sdkReady ? <Loader /> : (\r\n                                            <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                        )}\r\n                                    </ListGroup>\r\n                                )}\r\n                                {loadingDelivered && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {adminListUsers, adminDeleteUser} from '../store/actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nexport const UserListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const {users, loading, error} = useSelector(state => state.adminUserList)\r\n    const {userInfo} = useSelector(({userLogin}) => userLogin)\r\n    const {success: successDelete} = useSelector(function(state){return state.adminDeleteUser})\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(adminListUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, userInfo, history, successDelete])\r\n\r\n    const deleteUserHandler = userId => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(adminDeleteUser(userId))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><Link to={`mailto:${user.email}`}>{user.email}</Link></td>\r\n                                <td>{user.isAdmin ? (<i className='fas fa-check'  style={{color: 'green'}}/>) : (<i className='fas fa-times' style={{color:'red'}} />)}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit' />\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteUserHandler(user._id)}>\r\n                                        <i className='fas fa-trash' />\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {getUserDetails, adminUpdateUser} from '../store/actions/userActions'\r\nimport {FormContainer} from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {ADMIN_USER_UPDATE_RESET} from '../store/constants/userConstants'\r\n\r\nexport const UserEditScreen = ({match, history}) => {\r\n    const userId = match.params.id\r\n    const [name, nameSet] = useState('')\r\n    const [email, emailSet] = useState('')\r\n    const [isAdmin, isAdminSet] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const {user, loading, error} = useSelector(state => state.userDetails)\r\n    const {success: successUpdate, loading: loadingUpdate, error: errorUpdate} = useSelector(function({adminUpdateUser}){return adminUpdateUser})\r\n    \r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({type: ADMIN_USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                nameSet(user.name)\r\n                emailSet(user.email)\r\n                isAdminSet(user.isAdmin)\r\n            }\r\n        } \r\n    }, [dispatch, user, userId, successUpdate, history])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        const updateUser = {\r\n            _id: userId,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }\r\n        dispatch(adminUpdateUser(updateUser))\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate ? <Loader /> : errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='name' placeholder='Enter name' value={name} onChange={e => nameSet(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => emailSet(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check type='checkbox'label='Is Admin' checked={isAdmin} onChange={e => isAdminSet(e.target.checked)} />\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n                    </Form>\r\n                )} \r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button, Row, Col} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {listProducts, deleteProductByAdmin, createProductByAdmin} from '../store/actions/productActions'\r\nimport {ADMIN_PRODUCT_CREATE_RESET} from '../store/constants/productConstants'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {Paginate} from '../components/Paginate'\r\n\r\nexport const ProductListScreen = ({history, match}) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const dispatch = useDispatch()\r\n    const {error, loading, products, pages, page} = useSelector(state => state.productList)\r\n    const {success: successDelete, loading: loadingDelete, error: errorDelete} = useSelector(function(state){return state.adminDeleteProduct})\r\n    const {success: successCreate, loading: loadingCreate, error: errorCreate, product: createdProduct} = useSelector(state => state.adminCreateProduct)\r\n    const {userInfo} = useSelector(({userLogin}) => userLogin)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_CREATE_RESET\r\n        })\r\n        if (!userInfo && !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [dispatch, userInfo, history, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProductByAdmin())\r\n    }\r\n\r\n    const deleteUserHandler = userId => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteProductByAdmin(userId))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Row className='aligh-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}><i className='fas fa-plus'/> Create Product</Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingCreate ? <Loader /> : errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit' />\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteUserHandler(product._id)}>\r\n                                            <i className='fas fa-trash' />\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {listProductDetails, updateProductByAdmin} from '../store/actions/productActions'\r\nimport {FormContainer} from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { ADMIN_PRODUCT_UPDATE_RESET } from '../store/constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const ProductEditScreen = ({match, history}) => {\r\n    const productId = match.params.id\r\n    const [name, nameSet] = useState('')\r\n    const [price, priceSet] = useState(0)\r\n    const [image, imageSet] = useState('')\r\n    const [brand, brandSet] = useState('')\r\n    const [category, categorySet] = useState('')\r\n    const [countInStock, countInStockSet] = useState(0)\r\n    const [description, descriptionSet] = useState(0)\r\n    const [uploading, uploadingSet] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const {product, loading, error} = useSelector(state => state.productDetails)\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = useSelector(({adminUpdateProduct}) => adminUpdateProduct)\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({\r\n                type: ADMIN_PRODUCT_UPDATE_RESET\r\n            })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product || !product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                nameSet(product.name)\r\n                priceSet(product.price)\r\n                imageSet(product.image)\r\n                brandSet(product.brand)\r\n                categorySet(product.category)\r\n                countInStockSet(product.countInStock)\r\n                descriptionSet(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const uploadFileHandler = async e => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        uploadingSet(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const res = await axios.post('/api/upload', formData, config)\r\n            imageSet(res?.data)\r\n            uploadingSet(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            uploadingSet(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(updateProductByAdmin({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description,\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate ? <Loader /> : errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='name' placeholder='Enter name' value={name} onChange={e => nameSet(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>price</Form.Label>\r\n                            <Form.Control type='number' placeholder='Enter price' value={price} onChange={e => priceSet(Number(e.target.value))} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter image url' value={image} onChange={e => imageSet(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter brand' value={brand} onChange={e => brandSet(e.target.value)} />\r\n                            <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}>\r\n                                {uploading && <Loader />}\r\n                            </Form.File>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control type='number' placeholder='Enter count in stock' value={countInStock} onChange={e => countInStockSet(Number(e.target.value))} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter category' value={category} onChange={e => categorySet(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter description' value={description} onChange={e => descriptionSet(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n                    </Form>\r\n                )} \r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {listOrderByAdmin} from '../store/actions/orderActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nexport const OrderListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const {orders, loading, error} = useSelector(state => state.adminOrderList)\r\n    const {userInfo} = useSelector(({userLogin}) => userLogin)\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrderByAdmin())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, userInfo, history])\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>\r\n                                    {order.createdAt.substring(0, 10)}\r\n                                </td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (order.paidAt.substring(0, 10)) : (<i className='fas fa-times' style={{color:'red'}} />)}</td>\r\n                                <td>{order.isDelivered ? (order.deliveredAt.substring(0, 10)) : (<i className='fas fa-times' style={{color:'red'}} />)}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n","import {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport {Container} from 'react-bootstrap'\r\nimport {Header} from './components/Header'\r\nimport {Footer} from './components/Footer'\r\nimport {HomeScreen} from './screens/HomeScreen'\r\nimport {ProductScreen} from './screens/ProductScreen'\r\nimport {CartScreen} from './screens/CartScreen'\r\nimport {LoginScreen} from './screens/LoginScreen'\r\nimport { RegisterScreen } from './screens/RegisterScreen'\r\nimport { ProfileScreen } from './screens/ProfileScreen'\r\nimport { ShippingScreen } from './screens/ShippingScreen'\r\nimport { PaymentScreen } from './screens/PaymentScreen'\r\nimport { PlaceOrderScreen } from './screens/PlaceOrderScreen'\r\nimport { OrderScreen } from './screens/OrderScreen'\r\nimport { UserListScreen } from './screens/UserListScreen'\r\nimport { UserEditScreen } from './screens/UserEditScreen'\r\nimport { ProductListScreen } from './screens/ProductListScreen'\r\nimport { ProductEditScreen } from './screens/ProductEditScreen'\r\nimport { OrderListScreen } from './screens/OrderListScreen'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen}/>\r\n          <Route path='/placeorder' component={PlaceOrderScreen}/>\r\n          <Route path='/payment' component={PaymentScreen}/>\r\n          <Route path='/shipping'  component={ShippingScreen}/>\r\n          <Route path='/register' component={RegisterScreen}/>\r\n          <Route path='/login' component={LoginScreen}/>\r\n          <Route path='/profile' component={ProfileScreen}/>\r\n          <Route path='/product/:id' component={ProductScreen}/>\r\n          <Route path='/cart/:id?' component={CartScreen}/>\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route path='/admin/productlist' component={ProductListScreen} exact/>\r\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen}/>\r\n          <Route path='/admin/orderlist' component={OrderListScreen}/>\r\n          <Route path='/search/:keyword' component={HomeScreen} exact/>\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact/>\r\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact/>\r\n          <Route path='/' component={HomeScreen} exact/>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport { cartReducer } from './cartReducers'\r\nimport { productCreateReducer, productCreateReviewReducer, productDeleteReducer, productDetailsReducer, productListReducer, productTopRatedReducer, productUpdateReducer } from './productReducers'\r\nimport {adminUserDeleteReducer, adminUserListReducer, adminUserUpdateReducer, userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer} from './userReducers'\r\nimport {adminOrderDeliverReducer, adminOrderListReducer, orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer} from './orderReducers'\r\n\r\nexport const reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productReviewCreate: productCreateReviewReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    adminUserList: adminUserListReducer,\r\n    adminDeleteUser: adminUserDeleteReducer,\r\n    adminUpdateUser: adminUserUpdateReducer,\r\n    adminDeleteProduct: productDeleteReducer,\r\n    adminCreateProduct: productCreateReducer,\r\n    adminUpdateProduct: productUpdateReducer,\r\n    adminOrderList: adminOrderListReducer,\r\n    adminMarkOrderAsDelivered: adminOrderDeliverReducer\r\n})","import { ADMIN_PRODUCT_CREATE_FAIL, ADMIN_PRODUCT_CREATE_REQUEST, ADMIN_PRODUCT_CREATE_RESET, ADMIN_PRODUCT_CREATE_SUCCESS, ADMIN_PRODUCT_DELETE_FAIL, ADMIN_PRODUCT_DELETE_REQUEST, ADMIN_PRODUCT_DELETE_SUCCESS, ADMIN_PRODUCT_UPDATE_FAIL, ADMIN_PRODUCT_UPDATE_REQUEST, ADMIN_PRODUCT_UPDATE_RESET, ADMIN_PRODUCT_UPDATE_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_TOP_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS } from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products, \r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, {type, payload}) => {\r\n    switch (type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { \r\n                loading: true, \r\n                products: [] \r\n            }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: payload\r\n            }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product: {reviews: []}}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { \r\n                loading: true, \r\n                ...state\r\n            }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                product: action.payload \r\n            }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { \r\n                ...state,\r\n                loading: true, \r\n            }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true\r\n            }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n        case ADMIN_PRODUCT_DELETE_REQUEST:\r\n            return { \r\n                loading: true, \r\n                ...state\r\n            }\r\n        case ADMIN_PRODUCT_DELETE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true\r\n            }\r\n        case ADMIN_PRODUCT_DELETE_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: payload \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n        case ADMIN_PRODUCT_CREATE_REQUEST:\r\n            return { \r\n                loading: true, \r\n                ...state\r\n            }\r\n        case ADMIN_PRODUCT_CREATE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true,\r\n                product: payload\r\n            }\r\n        case ADMIN_PRODUCT_CREATE_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: payload \r\n            }\r\n        case ADMIN_PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product:{}}, {type, payload}) => {\r\n    switch (type) {\r\n        case ADMIN_PRODUCT_UPDATE_REQUEST:\r\n            return { \r\n                loading: true, \r\n            }\r\n        case ADMIN_PRODUCT_UPDATE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true,\r\n                product: payload\r\n            }\r\n        case ADMIN_PRODUCT_UPDATE_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: payload \r\n            }\r\n        case ADMIN_PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}","import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, {type, payload}) => {\r\n    switch (type) {\r\n        case CART_ADD_ITEM:\r\n            const newItem = payload\r\n            const existItem = state.cartItems.find(item => item.product === newItem.product)\r\n            if (existItem) {\r\n                return {...state, cartItems: state.cartItems.map(item => item.product === existItem.product ? newItem : item)}\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, newItem]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(cartItem => cartItem.product !== payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADMIN_USER_DELETE_FAIL, ADMIN_USER_DELETE_REQUEST, ADMIN_USER_DELETE_SUCCESS, ADMIN_USER_LIST_FAIL, ADMIN_USER_LIST_REQUEST, ADMIN_USER_LIST_RESET, ADMIN_USER_LIST_SUCCESS, ADMIN_USER_UPDATE_FAIL, ADMIN_USER_UPDATE_REQUEST, ADMIN_USER_UPDATE_RESET, ADMIN_USER_UPDATE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: payload\r\n            }\r\n        case USER_LOGIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: payload\r\n            }\r\n        case USER_REGISTER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user:{}}, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_DETAILS_RESET:\r\n            return {user: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success: true }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminUserListReducer = (state = {users: []}, action) => {\r\n    switch (action.type) {\r\n        case ADMIN_USER_LIST_REQUEST:\r\n            return {\r\n                loading: true \r\n            }\r\n        case ADMIN_USER_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                users: action.payload, \r\n            }\r\n        case ADMIN_USER_LIST_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n        case ADMIN_USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminUserDeleteReducer = (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n        case ADMIN_USER_DELETE_REQUEST:\r\n            return {\r\n                loading: true \r\n            }\r\n        case ADMIN_USER_DELETE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true\r\n            }\r\n        case ADMIN_USER_DELETE_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: payload \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminUserUpdateReducer = (state = {user: {}}, {type, payload}) => {\r\n    switch (type) {\r\n        case ADMIN_USER_UPDATE_REQUEST:\r\n            return {\r\n                loading: true \r\n            }\r\n        case ADMIN_USER_UPDATE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true,\r\n            }\r\n        case ADMIN_USER_UPDATE_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: payload \r\n            }\r\n        case ADMIN_USER_UPDATE_RESET:\r\n            return {user: {}}\r\n        default:\r\n            return state\r\n    }\r\n}","import {ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_RESET, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, ADMIN_ORDER_LIST_REQUEST, ADMIN_ORDER_LIST_SUCCESS, ADMIN_ORDER_LIST_FAIL, ADMIN_ORDER_DELIVER_REQUEST, ADMIN_ORDER_DELIVER_SUCCESS, ADMIN_ORDER_DELIVER_FAIL, ADMIN_ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, {type, payload}) => {\r\n    switch (type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = {orders: []}, {type, payload}) => {\r\n    switch (type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {orders: []}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminOrderListReducer = (state = {orders: []}, {type, payload}) => {\r\n    switch (type) {\r\n        case ADMIN_ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ADMIN_ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: payload\r\n            }\r\n        case ADMIN_ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminOrderDeliverReducer = (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n        case ADMIN_ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ADMIN_ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ADMIN_ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case ADMIN_ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport reduxThunk from 'redux-thunk'\r\nimport {reducer} from './reducers'\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : ''\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromLocalStorage, shippingAddress: shippingAddressFromLocalStorage, paymentMethod: paymentMethodFromLocalStorage },\r\n    userLogin: {\r\n        userInfo: userInfoFromLocalStorage\r\n    },\r\n}\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(reduxThunk)))\r\n\r\nexport default store","import {render} from 'react-dom';\r\nimport {App} from './App'\r\nimport {Provider} from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}